
//import static CourseSelection.c1;
//import static CourseSelection.conn1;
//import static CourseSelection.conn1;
//import static CourseSelection.ar;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Habibur Rahman
 */
public class CourseSelection11 extends javax.swing.JFrame {

    /**
     * Creates new form CourseSelection11
     */
    static boolean ar[] = new boolean[100];
    static String selectedLabCourses[] = new String[10];
    static String selectedTheoryCourses[] = new String[10];
    static ConnectMSSQL c1;
    static Connection conn1;
    public static String idS;

    public CourseSelection11(String txt) {
        initComponents();
        c1 = new ConnectMSSQL();
        c1.connectDB();
        conn1 = c1.connection;
        idS = txt;
    }
    float count = 0;
    float theoryCrCount = 0;
    float labCrCount = 0;
    int theoryCount = 0;
    int labCount = 0;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        creditHrLabel = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        theoryCrHrLabel = new javax.swing.JLabel();
        labCrHrLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        labCountLabel = new javax.swing.JLabel();
        theoryCountLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(204, 153, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null}
            },
            new String [] {
                "Course No", "Course Title", "Credit Hours"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Course Selection");

        creditHrLabel.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        creditHrLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        creditHrLabel.setText("0");

        jLabel4.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Selected Courses:");

        jLabel5.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel5.setText("Total Credit Hour:");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextArea1.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea1);

        jLabel1.setText("Click Once to select a course, Click again to remove it");

        jLabel7.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Total Theory Hours:");

        jLabel8.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel8.setText("Total Lab Hours:");

        theoryCrHrLabel.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        theoryCrHrLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        theoryCrHrLabel.setText("0");

        labCrHrLabel.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        labCrHrLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labCrHrLabel.setText("0");

        jButton1.setText("Done");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        labCountLabel.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        labCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labCountLabel.setText("0");

        theoryCountLabel.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        theoryCountLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        theoryCountLabel.setText("0");

        jLabel6.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("(TheoryCount)");

        jLabel11.setFont(new java.awt.Font("Bodoni MT Condensed", 1, 24)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("(LabCount)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 519, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(123, 123, 123)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 261, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(creditHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jButton1))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(labCrHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(labCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(theoryCrHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(theoryCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 648, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(40, 40, 40))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(creditHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(theoryCrHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(theoryCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labCrHrLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(labCountLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        //System.out.println("theory="+theoryCount+"\nlab="+labCount);
        if (theoryCount == 6 && labCount < 5) {
            int rowIndex = jTable1.getSelectedRow();
            float val = Float.parseFloat(jTable1.getValueAt(rowIndex, 2).toString());
            String courseno = jTable1.getValueAt(rowIndex, 0).toString();
            if (val == 3) {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "You can't select any more theory courses");
            }
            if (val != 3 && ar[rowIndex] == false) {
                ar[rowIndex] = true;
                count += val;
                labCrCount += val;
                labCount++;
                selectedLabCourses[labCount - 1] = courseno;

            } else if (val != 3 && ar[rowIndex] == true) {
                ar[rowIndex] = false;
                count -= val;
                labCrCount -= val;
                labCount--;
                for (int i = 0; i < 4; i++) {
                    if (selectedLabCourses[i].equals(courseno)) {
                        selectedLabCourses[i] = "";
                        break;
                    }
                }
            }

        } else if (labCount == 5 && theoryCount < 6) {
            int rowIndex = jTable1.getSelectedRow();
            float val = Float.parseFloat(jTable1.getValueAt(rowIndex, 2).toString());
            String courseno = jTable1.getValueAt(rowIndex, 0).toString();
            if (val != 3) {
                JFrame parent = new JFrame();
                JOptionPane.showMessageDialog(parent, "You can't select any more lab courses");
            }
            if (val == 3 && ar[rowIndex] == false) {
                ar[rowIndex] = true;
                count += val;
                theoryCrCount += val;
                theoryCount++;
                selectedTheoryCourses[theoryCount - 1] = courseno;

            } else if (val == 3 && ar[rowIndex] == true) {
                ar[rowIndex] = false;
                count -= val;
                theoryCrCount -= val;
                theoryCount--;
                for (int i = 0; i < 5; i++) {
                    if (selectedTheoryCourses[i].equals(courseno)) {
                        selectedTheoryCourses[i] = "";
                        break;
                    }
                }

            }

        } else if (labCount < 5 && theoryCount < 6) {

            int rowIndex = jTable1.getSelectedRow();
            float val = Float.parseFloat(jTable1.getValueAt(rowIndex, 2).toString());
            String courseno = jTable1.getValueAt(rowIndex, 0).toString();
            if (ar[rowIndex] == false) {
                ar[rowIndex] = true;
                count += val;
                if (val == 3) {
                    theoryCrCount += val;
                    theoryCount++;
                    selectedTheoryCourses[theoryCount - 1] = courseno;

                } else {
                    labCrCount += val;
                    labCount++;
                    selectedLabCourses[labCount - 1] = courseno;
                }

            } else {
                ar[rowIndex] = false;
                count -= val;
                if (val == 3) {
                    theoryCrCount -= val;
                    theoryCount--;
                    for (int i = 0; i < 5; i++) {
                        if (selectedTheoryCourses[i].equals(courseno)) {
                            selectedTheoryCourses[i] = "";
                            break;
                        }
                    }
                } else {
                    labCrCount -= val;
                    labCount--;
                    for (int i = 0; i < 4; i++) {
                        if (selectedLabCourses[i].equals(courseno)) {
                            selectedLabCourses[i] = "";
                            break;
                        }
                    }
                }
            }

        } else if (theoryCount == 6 && labCount == 5) {
            //System.out.println("i'm hereeeee");
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "You have reached the limit for both theory and lab courses");

        }
        String str = "";
        for (int i = 0; i <= 100; i++) {
            if (ar[i]) {
                str = str + jTable1.getValueAt(i, 0).toString() + ": " + jTable1.getValueAt(i, 1).toString() + "\n";

                jTextArea1.setText(str);
                creditHrLabel.setText(Float.toString(count));
                theoryCrHrLabel.setText(Float.toString(theoryCrCount));
                labCrHrLabel.setText(Float.toString(labCrCount));
                theoryCountLabel.setText(Integer.toString(theoryCount));
                labCountLabel.setText(Integer.toString(labCount));
            }
        }
        //System.out.println("theory="+theoryCount+"\nlab="+labCount);

    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (theoryCount < 5 && labCount < 4) {
            JFrame parent = new JFrame();
            JOptionPane.showMessageDialog(parent, "You have to select at least 5 and 4 lab theory courses");
        } else {
            if (theoryCount == 5 && labCount == 4) {
                try {
                    Statement statement;
                    statement = conn1.createStatement();

                    int valT1 = 0, valT2 = 0, valT3 = 0, valT4 = 0, valT5 = 0, valL1 = 0, valL2 = 0, valL3 = 0, valL4 = 0;
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "'");
                        while (resultSet.next()) {
                            valT1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "'");
                        while (resultSet.next()) {
                            valT2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "'");
                        while (resultSet.next()) {
                            valT3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "'");
                        while (resultSet.next()) {
                            valT4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "'");
                        while (resultSet.next()) {
                            valT5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "'");
                        while (resultSet.next()) {
                            valL1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "'");
                        while (resultSet.next()) {
                            valL2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "'");
                        while (resultSet.next()) {
                            valL3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "'");
                        while (resultSet.next()) {
                            valL4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (valT1 < 80 && valT2 < 80 && valT3 < 80 && valT4 < 80 && valT5 < 80 && valL1 < 80 && valL2 < 80 && valL3 < 80 && valL4 < 80) {
                        statement.execute("INSERT INTO CoursesTaken(StudentID,Theory1,Theory2,Theory3,Theory4,Theory5,Lab1,Lab2,Lab3,Lab4) values('" + idS + "','"
                                + selectedTheoryCourses[0] + "','" + selectedTheoryCourses[1] + "','" + selectedTheoryCourses[2] + "','" + selectedTheoryCourses[3] + "','"
                                + selectedTheoryCourses[4] + "','" + selectedLabCourses[0] + "','" + selectedLabCourses[1] + "','" + selectedLabCourses[2] + "','"
                                + selectedLabCourses[3] + "')");

                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[4] + "'");

                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[3] + "'");

                    } else if (valT1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[0] + " has reached the limit");
                    } else if (valT2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[1] + " has reached the limit");
                    } else if (valT3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[2] + " has reached the limit");
                    } else if (valT4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[3] + " has reached the limit");
                    } else if (valT5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[4] + " has reached the limit");
                    } else if (valL1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[0] + " has reached the limit");
                    } else if (valL2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[1] + " has reached the limit");
                    } else if (valL3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[2] + " has reached the limit");
                    } else if (valL4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[3] + " has reached the limit");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (theoryCount == 5 && labCount == 5) {
                try {
                    Statement statement;
                    statement = conn1.createStatement();
                    int valT1 = 0, valT2 = 0, valT3 = 0, valT4 = 0, valT5 = 0, valL1 = 0, valL2 = 0, valL3 = 0, valL4 = 0, valL5 = 0;
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "'");
                        while (resultSet.next()) {
                            valT1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "'");
                        while (resultSet.next()) {
                            valT2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "'");
                        while (resultSet.next()) {
                            valT3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "'");
                        while (resultSet.next()) {
                            valT4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "'");
                        while (resultSet.next()) {
                            valT5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "'");
                        while (resultSet.next()) {
                            valL1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "'");
                        while (resultSet.next()) {
                            valL2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "'");
                        while (resultSet.next()) {
                            valL3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "'");
                        while (resultSet.next()) {
                            valL4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[4] + "'");
                        while (resultSet.next()) {
                            valL5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (valT1 < 80 && valT2 < 80 && valT3 < 80 && valT4 < 80 && valT5 < 80 && valL1 < 80 && valL2 < 80 && valL3 < 80 && valL4 < 80 && valL5 < 80) {
                        statement.execute("INSERT INTO CoursesTaken(StudentID,Theory1,Theory2,Theory3,Theory4,Theory5,Lab1,Lab2,Lab3,Lab4,Lab5) values('" + idS + "','"
                                + selectedTheoryCourses[0] + "','" + selectedTheoryCourses[1] + "','" + selectedTheoryCourses[2] + "','" + selectedTheoryCourses[3] + "','"
                                + selectedTheoryCourses[4] + "','" + selectedLabCourses[0] + "','" + selectedLabCourses[1] + "','" + selectedLabCourses[2] + "','"
                                + selectedLabCourses[3] + "','" + selectedLabCourses[4] + "')");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[4] + "'");

                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[4] + "'");
                    } else if (valT1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[0] + " has reached the limit");
                    } else if (valT2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[1] + " has reached the limit");
                    } else if (valT3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[2] + " has reached the limit");
                    } else if (valT4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[3] + " has reached the limit");
                    } else if (valT5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[4] + " has reached the limit");
                    } else if (valL1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[0] + " has reached the limit");
                    } else if (valL2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[1] + " has reached the limit");
                    } else if (valL3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[2] + " has reached the limit");
                    } else if (valL4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[3] + " has reached the limit");
                    } else if (valL5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[4] + " has reached the limit");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else if (theoryCount == 6 && labCount == 4) {
                try {
                    Statement statement;
                    statement = conn1.createStatement();
                    int valT1 = 0, valT2 = 0, valT3 = 0, valT4 = 0, valT5 = 0, valT6 = 0, valL1 = 0, valL2 = 0, valL3 = 0, valL4 = 0;
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "'");
                        while (resultSet.next()) {
                            valT1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "'");
                        while (resultSet.next()) {
                            valT2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "'");
                        while (resultSet.next()) {
                            valT3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "'");
                        while (resultSet.next()) {
                            valT4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "'");
                        while (resultSet.next()) {
                            valT5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[5] + "'");
                        while (resultSet.next()) {
                            valT6 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "'");
                        while (resultSet.next()) {
                            valL1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "'");
                        while (resultSet.next()) {
                            valL2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "'");
                        while (resultSet.next()) {
                            valL3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "'");
                        while (resultSet.next()) {
                            valL4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (valT1 < 80 && valT2 < 80 && valT3 < 80 && valT4 < 80 && valT5 < 80 && valT6 < 80 && valL1 < 80 && valL2 < 80 && valL3 < 80 && valL4 < 80) {
                        statement.execute("INSERT INTO CoursesTaken(StudentID,Theory1,Theory2,Theory3,Theory4,Theory5,Theory6,Lab1,Lab2,Lab3,Lab4) values('" + idS + "','"
                                + selectedTheoryCourses[0] + "','" + selectedTheoryCourses[1] + "','" + selectedTheoryCourses[2] + "','" + selectedTheoryCourses[3] + "','"
                                + selectedTheoryCourses[4] + "','" + selectedTheoryCourses[5] + "','" + selectedLabCourses[0] + "','" + selectedLabCourses[1] + "','" + selectedLabCourses[2] + "','"
                                + selectedLabCourses[3] + "')");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[4] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[5] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[5] + "'");

                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[3] + "'");
                    } else if (valT1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[0] + " has reached the limit");
                    } else if (valT2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[1] + " has reached the limit");
                    } else if (valT3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[2] + " has reached the limit");
                    } else if (valT4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[3] + " has reached the limit");
                    } else if (valT5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[4] + " has reached the limit");
                    } else if (valT6 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[5] + " has reached the limit");
                    } else if (valL1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[0] + " has reached the limit");
                    } else if (valL2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[1] + " has reached the limit");
                    } else if (valL3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[2] + " has reached the limit");
                    } else if (valL4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[3] + " has reached the limit");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                }
            } else {
                try {
                    Statement statement;
                    statement = conn1.createStatement();
                    int valT1 = 0, valT2 = 0, valT3 = 0, valT4 = 0, valT5 = 0, valT6 = 0, valL1 = 0, valL2 = 0, valL3 = 0, valL4 = 0, valL5 = 0;
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "'");
                        while (resultSet.next()) {
                            valT1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "'");
                        while (resultSet.next()) {
                            valT2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "'");
                        while (resultSet.next()) {
                            valT3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "'");
                        while (resultSet.next()) {
                            valT4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "'");
                        while (resultSet.next()) {
                            valT5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[5] + "'");
                        while (resultSet.next()) {
                            valT6 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "'");
                        while (resultSet.next()) {
                            valL1 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "'");
                        while (resultSet.next()) {
                            valL2 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "'");
                        while (resultSet.next()) {
                            valL3 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "'");
                        while (resultSet.next()) {
                            valL4 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    try {
                        Statement statement1;
                        statement1 = conn1.createStatement();
                        ResultSet resultSet = statement1
                                .executeQuery("select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[4] + "'");
                        while (resultSet.next()) {
                            valL5 = resultSet.getInt("CurrentNoOfStudents");
                        }

                    } catch (SQLException ex) {
                        Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    if (valT1 < 80 && valT2 < 80 && valT3 < 80 && valT4 < 80 && valT5 < 80 && valT6 < 80 && valL1 < 80 && valL2 < 80 && valL3 < 80 && valL4 < 80) {
                        statement.execute("INSERT INTO CoursesTaken(StudentID,Theory1,Theory2,Theory3,Theory4,Theory5,Theory6,Lab1,Lab2,Lab3,Lab4,Lab5) values('" + idS + "','"
                                + selectedTheoryCourses[0] + "','" + selectedTheoryCourses[1] + "','" + selectedTheoryCourses[2] + "','" + selectedTheoryCourses[3] + "','"
                                + selectedTheoryCourses[4] + "','" + selectedTheoryCourses[5] + "','" + selectedLabCourses[0] + "','" + selectedLabCourses[1] + "','" + selectedLabCourses[2] + "','"
                                + selectedLabCourses[3] + "','" + selectedLabCourses[4] + "')");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[4] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedTheoryCourses[5] + "')+1\n"
                                + "WHERE CourseNo='" + selectedTheoryCourses[5] + "'");

                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[0] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[0] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[1] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[1] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[2] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[2] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[3] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[3] + "'");
                        statement.execute("UPDATE courseCurriculum\n"
                                + "SET CurrentNoOfStudents=(select CurrentNoOfStudents from courseCurriculum where CourseNo='" + selectedLabCourses[4] + "')+1\n"
                                + "WHERE CourseNo='" + selectedLabCourses[4] + "'");
                    } else if (valT1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[0] + " has reached the limit");
                    } else if (valT2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[1] + " has reached the limit");
                    } else if (valT3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[2] + " has reached the limit");
                    } else if (valT4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[3] + " has reached the limit");
                    } else if (valT5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[4] + " has reached the limit");
                    } else if (valT6 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedTheoryCourses[5] + " has reached the limit");
                    } else if (valL1 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[0] + " has reached the limit");
                    } else if (valL2 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[1] + " has reached the limit");
                    } else if (valL3 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[2] + " has reached the limit");
                    } else if (valL4 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[3] + " has reached the limit");
                    } else if (valL5 >= 80) {
                        JFrame parent = new JFrame();
                        JOptionPane.showMessageDialog(parent, "Course No: " + selectedLabCourses[4] + " has reached the limit");
                    }

                } catch (SQLException ex) {
                    Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }

        //System.out.println("h1");
        try {
            Statement statement;
            statement = conn1.createStatement();
            statement.execute("DROP TABLE canSelectTheseCourses");
            statement.execute("DROP TABLE UnpassedCourses");
            statement.execute("DROP TABLE UnpassedCoursesWithPrereq");
            statement.execute("DROP TABLE prequisitesPassed");
            //System.out.println("h2");

        } catch (SQLException ex) {
            Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
        }

        this.setVisible(false);
        StudentProfileWithSelectedCourses s = new StudentProfileWithSelectedCourses(idS);
        s.setVisible(true);
        s.showProfile();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CourseSelection11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CourseSelection11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CourseSelection11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CourseSelection11.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new CourseSelection11().setVisible(true);
            }
        });
    }

    public void showTableData() {
        try {
            Statement statement;
            statement = conn1.createStatement();

            DefaultTableModel model = new DefaultTableModel(new String[]{"Course No", "Course Title", "Credit Hours"}, 0);
            ResultSet resultSet0 = statement
                    .executeQuery("SELECT * FROM CourseCurriculum WHERE Prerequisite1 is NULL");

            while (resultSet0.next()) {
                String a = resultSet0.getString("CourseNo");
                String b = resultSet0.getString("CourseTitle");
                String cc = resultSet0.getString("CreditHr");

                model.addRow(new Object[]{a, b, cc});
                jTable1.setModel(model);

            }

        } catch (SQLException ex) {
            Logger.getLogger(Gridview2.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel creditHrLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JLabel labCountLabel;
    private javax.swing.JLabel labCrHrLabel;
    private javax.swing.JLabel theoryCountLabel;
    private javax.swing.JLabel theoryCrHrLabel;
    // End of variables declaration//GEN-END:variables
}
